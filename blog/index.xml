<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Pentester, wtf!?</title><link>/blog/</link><description>Recent content in Blogs on Pentester, wtf!?</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 31 Oct 2020 05:00:00 +1000</lastBuildDate><atom:link href="/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Guessing vs Not Knowing</title><link>/blog/knowing-v-guessing/</link><pubDate>Sat, 31 Oct 2020 05:00:00 +1000</pubDate><guid>/blog/knowing-v-guessing/</guid><description>I recently watched a video by @liveoverflow on YouTube, aptly labelled &amp;lsquo;Guessing vs. Not Knowing in Hacking and CTFs&amp;rsquo; at &amp;lsquo;https://www.youtube.com/watch?v=L1RvK1443Yw'.
Guessing, is pretty boring in CTFs. He calls out steganography challenges outright, which always comes down to some crappy tool you never knew about. The tl;dr is that bruting directories is generally a waste of time, and it ultimately comes down to guessing a bunch.
You wouldn&amp;rsquo;t want to do it for a product assessment, because you&amp;rsquo;re going to spend all your time bruting things instead of triaging actual issues, and in a CTF it&amp;rsquo;s a lot of wasted time waiting for gobuster to do its thing.</description></item><item><title>Risk Intelligence</title><link>/blog/risk-intelligence/</link><pubDate>Tue, 27 Oct 2020 18:00:00 +1000</pubDate><guid>/blog/risk-intelligence/</guid><description>Sometimes I read.
Most of the time, it&amp;rsquo;s books that might apply to my job, my hobbies, or in some way could be useful, or perhaps someone recommended me a book and I&amp;rsquo;ve forgotten what utility it may have had. Unfortunately, as I do not track who recommended the book, I don&amp;rsquo;t have any idea on who to thank or blame.
I recently read Risk Intelligence: How to live with uncertainty by Dylan Evans (https://www.</description></item><item><title>Email marketing annoyances</title><link>/blog/email-annoyance/</link><pubDate>Mon, 26 Oct 2020 18:00:00 +1000</pubDate><guid>/blog/email-annoyance/</guid><description>Due to self inflicted circumstances, I had to sign away my rights with a General indemnity and release, which would stop me from trying to sue if I am injured doing some kind of activity, such as if I fall over while taking photos, or if I am maimed by a large hungry animal.
Thankfully, the requesting company uses some shitware service called &amp;lsquo;SmartWaiver&amp;rsquo;, which boasts to have &amp;lsquo;Over 90 million waivers signed&amp;rsquo;, but had this annoying little checkbox at the bottom of the form:</description></item><item><title>XSS in the trusted zone is drive-by RCE</title><link>/blog/ie-trusted-zone/</link><pubDate>Sat, 24 Oct 2020 11:00:00 +1000</pubDate><guid>/blog/ie-trusted-zone/</guid><description>Tl;dr &amp;lt;script&amp;gt; var ws = new ActiveXObject(&amp;quot;WScript.Shell&amp;quot;); ws.Exec(&amp;quot;c:\\windows\\system32\\calc.exe&amp;quot;); &amp;lt;/script&amp;gt; Find some webapp in the trusted zone, get XSS in it, pop calc on all visitors using IE.
Trusted Zone For those who have worked in corporate, you&amp;rsquo;ve probably needed to use Internet Explorer for something that&amp;rsquo;s both critical to not getting yelled at by your boss, and also critical that you use so you get paid. Normally, these are things like Payroll, Timesheets, or Mandatory training nonsense, which meets the above two criteria nicely.</description></item><item><title>Afternoon of Scapy</title><link>/blog/2020-10-16-amongus/</link><pubDate>Sun, 18 Oct 2020 18:00:00 +1000</pubDate><guid>/blog/2020-10-16-amongus/</guid><description>&amp;ldquo;Among Us is an online multiplayer social deduction game developed and published by American game studio InnerSloth and released on June 15, 2018. The game takes place in a space-themed setting in which players each take on one of two roles, most being Crewmates, and a predetermined number being Impostors.&amp;rdquo;
https://en.wikipedia.org/wiki/Among_Us It&amp;rsquo;s a pretty nifty game, where you need to figure out who the bad guys are, while completing mundane tasks.</description></item><item><title>How to run a shit Pentester interview</title><link>/blog/2020-10-14-shit-interview/</link><pubDate>Wed, 14 Oct 2020 18:00:00 +1000</pubDate><guid>/blog/2020-10-14-shit-interview/</guid><description>Are you a security company, and trying to hire new staff? Want to do it poorly? Try out the following tips and tricks, broken into before, during, and after!
Job advertisement:
Use vague, hip terms such as &amp;ldquo;ninja&amp;rdquo;, &amp;ldquo;code monkey&amp;rdquo;, and throw as many stereotypes as you can in Bonus points if this does not accurately reflect the culture of your organisation never list salary, expectatations No spellchecking. It&amp;rsquo;s for nerds anyway, and you want at least 10 typographic errors to show that your megacorporation is human The title is everything - Ensure it&amp;rsquo;s suitably vague, and could easily be spotted in retrospect as a policy orientated job, rather than a technical one Try the following canned statements for your advertisement:</description></item><item><title>Generating fast hashes</title><link>/blog/2020-10-13-xxhash/</link><pubDate>Tue, 13 Oct 2020 18:00:00 +1000</pubDate><guid>/blog/2020-10-13-xxhash/</guid><description>If you&amp;rsquo;re writing code, and need to generate deterministic identifiers for data - such as if you&amp;rsquo;re scraping a website, and your code looks like this:
&amp;gt;&amp;gt;&amp;gt; import hashlib &amp;gt;&amp;gt;&amp;gt; # import requests, scrape some page, pull title/content, etc &amp;gt;&amp;gt;&amp;gt; m = hashlib.sha256() &amp;gt;&amp;gt;&amp;gt; m.update(b&amp;quot;Some website title&amp;quot;) &amp;gt;&amp;gt;&amp;gt; m.update(b&amp;quot;Some shocking content, that might be on a webpage \ ... that you may, or may not want to hash, such that you could \ .</description></item><item><title>Average endpoint has 10 agents</title><link>/blog/2019-11-29-endpoint/</link><pubDate>Fri, 29 Nov 2019 19:30:00 +1000</pubDate><guid>/blog/2019-11-29-endpoint/</guid><description>According to Absolute software, the average &amp;lsquo;enterprise&amp;rsquo; endpoint has 10 shitware services running This is collected out of 12,000 organisations, average size unknown 21% of AV wasn&amp;rsquo;t up to date 23% of patching tools were broken or disabled Encryption tools are “regularly disabled, broken, or missing entirely” 100% of &amp;ldquo;encryption agents&amp;rdquo; had &amp;ldquo;Failed encryption&amp;rdquo; over the period of a year 42% of endpoints have encryption failures at any given point Unsure if anyones considering that in regards to their mobile fleets akwardly this isn&amp;rsquo;t broken up to state what kind of failure it is, worst case is no encryption at all, best case is uncertain (partial encryption, or no encryption on portable media?</description></item><item><title>Biometrics in the EnterpriseMeme</title><link>/blog/2019-11-29-biometrics-policy/</link><pubDate>Fri, 29 Nov 2019 19:30:00 +1000</pubDate><guid>/blog/2019-11-29-biometrics-policy/</guid><description>tl;dr Guy gets fired for not enrolling in biometric signin at work, gets fired, takes case to Fair Work and wins the case.
Less tl;dr In an article posted over 6 months ago, A guy was fired for not handing over biometric data, took it to the Fair Work Comission, and won the case - he represented himself, which is also fairly notable. The article I&amp;rsquo;m talking about is https://www.abc.net.au/news/2019-05-21/fingerprints-biometric-data-worker-wins-unfair-dismissal-case/11129338</description></item><item><title>AD - Account Lockout vs Disabled</title><link>/blog/2019-10-17-lockout-vs-disabled/</link><pubDate>Thu, 17 Oct 2019 20:30:00 +1000</pubDate><guid>/blog/2019-10-17-lockout-vs-disabled/</guid><description>tl;dr - Disabling an account in AD will replicate normally, which can give an attacker quite a bit of time :)
What Account lockout vs Disabled account Disabling an account sets a flag in the userAccountControl This attribute is handled via normal replication Locking an account out is when an accounts BadLogonCount exceeds some threshold ( Lockout-Threshold ) This sets the lockoutTime and Lockout-Duration attributes on an account, and then is handled by immediate replication instead of &amp;ldquo;normal&amp;rdquo; replication Edge case - this also gets compared against LastBadPasswordAttempt Also useful to note, this attribute isn&amp;rsquo;t replicated :) &amp;lsquo;Normal&amp;rsquo; replication, how fast is that?</description></item><item><title>Lol ANU</title><link>/blog/2019-10-08-lol-anu/</link><pubDate>Tue, 08 Oct 2019 20:30:00 +1000</pubDate><guid>/blog/2019-10-08-lol-anu/</guid><description>tl;dr - Snarky comments about http://imagedepot.anu.edu.au/scapa/Website/SCAPA190209_Public_report_web_2.pdf
What Some place got hacked &amp;ldquo;This report details the level of sophistication, the likes of which has shocked even themost experienced Australian security experts&amp;rdquo;. No idea what they mean by &amp;ldquo;experts&amp;rdquo; It&amp;rsquo;s 4x sophisticated, based on how many times &amp;lsquo;sophisticated&amp;rsquo; was mentioned in the document What happened 9 November 2018: spearphishing email one. The actor’s campaign started with a spearphishing email sent to the mailbox of a senior member of staff.</description></item><item><title>On the viability of memory forensics in compromised environments</title><link>/blog/2019-08-31-memory-forensics-viability/</link><pubDate>Sat, 31 Aug 2019 14:00:00 +1000</pubDate><guid>/blog/2019-08-31-memory-forensics-viability/</guid><description>Viability of Memory Forensics A pretty cool paper was written up in 2015 regarding the viability of memory forensics in compromised environments - aptly titled: On the Viability of Memory Forensics in Compromised Environments. You can find the paper at https://pdfs.semanticscholar.org/6d26/be83b674231a301e7bed762895f14e613f66.pdf
Fundamentally, this comes down to can you trust an owned box - I put forward that you probably can under some circumstances, and not at all when an attacker is competent.</description></item><item><title>K8s config maps don't update in pods when mounted as volumes</title><link>/blog/k8s-configmaps-dont-update-in-pod/</link><pubDate>Tue, 13 Aug 2019 20:30:00 +1000</pubDate><guid>/blog/k8s-configmaps-dont-update-in-pod/</guid><description>Given the following config, would an update to a configmap propogate to a pod?
apiVersion: v1 kind: ConfigMap metadata: name: special-config namespace: default data: data: this-is-an-initial-value --- apiVersion: v1 kind: Pod metadata: name: pod-demo spec: containers: - name: nginx image: nginx volumeMounts: - name: config-volume mountPath: /etc/config volumes: - name: config-volume configMap: name: special-config restartPolicy: Never Initially, it&amp;rsquo;s set to what you&amp;rsquo;d expect:
$ k apply -f demo-configmap.yml configmap/special-config created pod/pod-demo created $ k exec -it pod-demo cat /etc/config/data &amp;amp;&amp;amp; echo this-is-an-initial-value After modification, it doesn&amp;rsquo;t appear to have propagated</description></item><item><title>DMA attacks with the PCIscreamer</title><link>/blog/dma-attack-pentester/</link><pubDate>Mon, 12 Aug 2019 00:20:00 +1000</pubDate><guid>/blog/dma-attack-pentester/</guid><description>Tl;dr Go buy a PCIescreamer and get easy local privesc, and with the lack of LAPS/decent auth in lots of environments, you too can break the &amp;lsquo;Enterprise Network(TM)&amp;rsquo;.
Less tl;dr Thanks to the hard work of guys like Joe Fitzpatrick and Ulf Frisk, DMA attacks against most general purpose computers are now a thing even Pentesters can do.
I&amp;rsquo;ve been able to use the device sucessfully in a few engagements and it&amp;rsquo;s worked out pretty well, to the point where if you&amp;rsquo;re not considering it as part of your threat model (i.</description></item><item><title>Shitty Pentest Findings - Password Autocomplete Enabled</title><link>/blog/shitty-pentester-finding-passautocomplete/</link><pubDate>Tue, 06 Aug 2019 20:00:00 +1000</pubDate><guid>/blog/shitty-pentester-finding-passautocomplete/</guid><description>Tldr autocomplete=off - Browsers have ignored this field since 2014, because it&amp;rsquo;s a stupid thing to include in a threat model.
Less tl;dr If you don&amp;rsquo;t know what I mean, check out https://hackerone.com/reports/7954 for an example.
Notably, this has been ignored since 2014 https://chromereleases.googleblog.com/2014/04/stable-channel-update.html - which seems to be ignored in a lot of bug bounty submissions.</description></item><item><title>Jumpboxes are not a mitigation for credential theft</title><link>/blog/ms-win10-credential-theft-mitigation/</link><pubDate>Mon, 05 Aug 2019 19:00:00 +1000</pubDate><guid>/blog/ms-win10-credential-theft-mitigation/</guid><description>tl;dr Microsoft said it themselves, Jumpservers aren&amp;rsquo;t a mitigation for credential theft
What From Microsoft, Windows 10 Credential Theft Mitigation Guide: https://download.microsoft.com/download/C/1/4/C14579CA-E564-4743-8B51-61C0882662AC/Windows%2010%20credential%20theft%20mitigation%20guide.docx
Assume breach: two words that should change the way defenders think about compromise in their organization. Microsoft investigations of attacks on customers all too often reveal success in compromising user and administrator account credentials, including domain and &amp;gt;enterprise administrator credentials. Technical features and capabilities alone are not enough: the most effective solution requires a planned approach as part of a &amp;gt;comprehensive security architecture that includes proper system administration and operation.</description></item><item><title>RVTools</title><link>/blog/lol-rvtools/</link><pubDate>Sun, 04 Aug 2019 18:00:00 +1000</pubDate><guid>/blog/lol-rvtools/</guid><description>Tl;dr _RVToolsPWD is a clearly reverseable password blob, PBKDF2 used on robware and Ivan Medvedev
What If you see this _RVToolsPWD preamble in a string, and if it also looks like Base64, it&amp;rsquo;s probably this.
rvtools https://www.robware.net/rvtools/ This thing logs into a a bunch of VMWare boxes and pulls stats Apparently this tool is popular, as it&amp;rsquo;s mentioned on some podcast as the Number 1 tool https://blogs.vmware.com/virtualblocks/2019/03/08/vspeaking-podcast-episode-108-top-10-vmware-tools/ Also lets you update VMWare tools It includes a handy password &amp;lsquo;encryption&amp;rsquo; utility, which can be used to presumably keep the GRC nerds at bay To no ones surprise, it&amp;rsquo;s encryption is pretty silly, as it&amp;rsquo;s got a hardcoded password and salt.</description></item><item><title>M$ - AlwaysOn VPN first thoughts</title><link>/blog/ms-alwayson-threatmodels/</link><pubDate>Fri, 26 Jul 2019 19:15:00 +1000</pubDate><guid>/blog/ms-alwayson-threatmodels/</guid><description>tl;dr Microsofts' AlwaysOn VPN, thoughts on how it might work, lazy threat modelling
What AlwaysOn, from https://docs.microsoft.com/en-us/windows-server/remote/remote-access/vpn/always-on-vpn/deploy/always-on-vpn-deploy:
Always On VPN provides a single, cohesive solution for remote access and supports domain-joined, nondomain-joined (workgroup), or Azure AD–joined devices, even &amp;gt;personally owned devices. With Always On VPN, the connection type does not have to be exclusively user or device but can be a combination of both. For example, you &amp;gt;could enable device authentication for remote device management, and then enable user authentication for connectivity to internal company sites and services.</description></item><item><title>Shitty sysadmins - Applocker</title><link>/blog/ms-applocker-defenceindepth/</link><pubDate>Thu, 25 Jul 2019 19:15:00 +1000</pubDate><guid>/blog/ms-applocker-defenceindepth/</guid><description>tl;dr Applocker - don&amp;rsquo;t rely on it, and it may as well be DEP, or UAC.
What From https://www.microsoft.com/en-us/msrc/windows-security-servicing-criteria:
Defense-in-depth security features
In some cases, a security feature may provide protection against a threat without being able to provide a robust defense. These security features are typically &amp;gt;referred to as defense-in-depth features or mitigations because they provide additional security but may have by design limitations that prevent them from fully &amp;gt;mitigating a threat.</description></item><item><title>Shitty sysadmins - MS14-025</title><link>/blog/ms14-025/</link><pubDate>Wed, 24 Jul 2019 19:15:47 +1000</pubDate><guid>/blog/ms14-025/</guid><description>tl;dr findstr /S /I cpassword \\lol.domain\SYSVOL\lol.domain\Policies\ What Group policy does a bunch of stuff, some of this stuff needs credentials These credentials would end up in a cpassword attribute Everyone realised this was a bad idea in 2014 The ability to do things this was removed in 2014 When you see these things in 2019, it&amp;rsquo;s because something old is still there (and it&amp;rsquo;s probably been abused by some other attacker too).</description></item><item><title>Password Audit and Control Guidance - Active Directory</title><link>/blog/proposal-windows-ad-passwords/</link><pubDate>Tue, 16 Jul 2019 00:00:00 +1000</pubDate><guid>/blog/proposal-windows-ad-passwords/</guid><description>Tldr Password filters
Less tl;dr I keep finding loads of password reuse in target environments. This is particularly common in users that keep low and high privileged accounts, and the practice generally results in trivial privilege escalation within the environment. This practice provides an “easy win” for an attacker, and serves to undermine an organisation’s security programme and the effectiveness of its defence-in-depth controls. I think the following could help solve the problem, or at least work towards making it significantly less bad (Although you only need one win as an attacker for password reuse).</description></item><item><title>Sysmon configuation</title><link>/blog/sysmon-config/</link><pubDate>Sat, 01 Jun 2019 12:30:47 +1000</pubDate><guid>/blog/sysmon-config/</guid><description>Tldr Seriously just use https://github.com/SwiftOnSecurity/sysmon-config
Less tl;dr https://github.com/SwiftOnSecurity/sysmon-config WEF is going to save you a lot of money/effort Sticking things into (H)ELK is going to be better than some other generic shitty SIEM You should have hardened your machines</description></item><item><title>Dumping memory using SMM</title><link>/blog/dumping-mem-via-smm/</link><pubDate>Sun, 03 Feb 2019 12:30:00 +0000</pubDate><guid>/blog/dumping-mem-via-smm/</guid><description>Following up on SMM:
It&amp;rsquo;s a good place for persistence Turns out it&amp;rsquo;s also a good place for dumping memory! You&amp;rsquo;ve got access to all memory (The paper says only 4GB, unsure why they didn&amp;rsquo;t swap to long mode?) Added bonus: CPU isn&amp;rsquo;t executing other code, so nothing is going to change while you&amp;rsquo;re reading it No idea where this went - The author didn&amp;rsquo;t seem to publish anything further on the matter (https://www.</description></item><item><title>Sitting in hardware</title><link>/blog/hardware-backdoors/</link><pubDate>Sat, 02 Feb 2019 12:30:00 +0000</pubDate><guid>/blog/hardware-backdoors/</guid><description>A tl;dr summary on System Management Mode (SMM), light covering hardware backdoors. Check out www.c7zero.info
This all started with a blog post on building a reliable SMM backdoor, but went into a rabbit hole. These were my notes when reading into it.
My understanding of sitting in SMM is:
System Management Mode (SMM) &amp;ldquo;pauses&amp;rdquo; the OS, then runs its own code Pause - Comes as a &amp;lsquo;System Management Interrupt (SMI)&amp;rsquo;, highest priority, can&amp;rsquo;t be masked Copied into memory at power-on(DXE phase?</description></item><item><title>Kiwicon 2018 notes</title><link>/blog/2018-conference-kiwicon/</link><pubDate>Sat, 01 Dec 2018 12:30:47 +1000</pubDate><guid>/blog/2018-conference-kiwicon/</guid><description>Matt Garret, Shitty Scooters Meta Moved to replace Jess Frazelle First X minutes explaining the economy of scooters Notably, some look like they&amp;rsquo;re in Australia too Moved into reversing the android app Guy grepped for https:// in the app Bunch of privacy violations Reversing a scoooter app (For Lime) Commercial scooter Terrible one - GPS tracker / gear Better ones have modems/controls First gen Lime scooters were getting people injured, allegedly What the app is Shows you where the scooters are (With Identifiers, has a number on the scooter) Lets you hire a scooter When hired, scooter doesnt show on UI, but will tell you where it ends up when its finished What the API lets you do Request the location of every scooter (6 digit ID, not a large keyspace) Also lets you request where an in use scooter is, while hired Guy plots location of where the scooters are They&amp;rsquo;re broadacasting when they&amp;rsquo;re manfactured and moved from factory to factory Theres about 250k of them Theres other shitty scooter places, go figure Vendor called &amp;lsquo;spin&amp;rsquo;, sold to Ford Not really on the internet, just bluetooth to phones and forwards data via that Could have used TOTP, or anything shitty you send a series of bytes to them and they unlock The scooter can&amp;rsquo;t call home without the app, its got no hardware to do so Moloch &amp;amp; Mandatory, Cloud/BigData to pentest at scale Meta</description></item></channel></rss>