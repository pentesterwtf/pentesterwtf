<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dev on Pentester, wtf!?</title><link>/categories/dev/</link><description>Recent content in dev on Pentester, wtf!?</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 09 Feb 2021 18:30:00 +1000</lastBuildDate><atom:link href="/categories/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating fast hashes, part 2</title><link>/blog/2021-02-09-sunspot-hashes/</link><pubDate>Tue, 09 Feb 2021 18:30:00 +1000</pubDate><guid>/blog/2021-02-09-sunspot-hashes/</guid><description>I previously shilled xxHash (https://pentester.wtf/blog/2020-10-13-xxhash/), but I&amp;rsquo;m pretty happy when I see malware using fast hashes for non security related tasks, rather than just using SHA/Bcrypt/whatever and being terribly slow. With that in mind, I&amp;rsquo;d like to reiterate:
If you&amp;rsquo;re writing code malware, and need to generate deterministic identifiers for data - such as if you&amp;rsquo;re scraping a website comparing processes on an endpoint to ones you care about (i.e. msbuild), and your code looks like this:</description></item><item><title>Generating fast hashes</title><link>/blog/2020-10-13-xxhash/</link><pubDate>Tue, 13 Oct 2020 18:00:00 +1000</pubDate><guid>/blog/2020-10-13-xxhash/</guid><description>If you&amp;rsquo;re writing code, and need to generate deterministic identifiers for data - such as if you&amp;rsquo;re scraping a website, and your code looks like this:
&amp;gt;&amp;gt;&amp;gt; import hashlib &amp;gt;&amp;gt;&amp;gt; # import requests, scrape some page, pull title/content, etc &amp;gt;&amp;gt;&amp;gt; m = hashlib.sha256() &amp;gt;&amp;gt;&amp;gt; m.update(b&amp;quot;Some website title&amp;quot;) &amp;gt;&amp;gt;&amp;gt; m.update(b&amp;quot;Some shocking content, that might be on a webpage \ ... that you may, or may not want to hash, such that you could \ .</description></item><item><title>Open Source and Licensing</title><link>/blog/open-sores-licensing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/blog/open-sores-licensing/</guid><description>Developing for the public is an annoying, thankless task; yet people still do it. On top of that, is the hellscape of licensing your software, and picking components with the right licensing. In short:
Software has licensing (https://choosealicense.com/) if you don&amp;rsquo;t pick a license, in AU it ends up being copyrighted No idea about other countries These licenses have conditions, things like: If it breaks, it&amp;rsquo;s not the authors problem (warranty) If it breaks, it&amp;rsquo;s not the authors fault (liability) Private usage limitations, commercial usage Licensing restreictions of systems using the library Conditions around the disclosure of source code This can bite you, especially in cases of picking components which have a GPL license (https://choosealicense.</description></item></channel></rss>